name: ShopKit CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flutter-version: [3.10.x, 3.16.x, 3.19.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ matrix.flutter-version }}
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .

    - name: Analyze project source
      run: dart analyze --fatal-infos

    - name: Run unit tests
      run: flutter test --coverage

    - name: Run widget tests
      run: flutter test test/widget/

    - name: Generate coverage report
      run: |
        dart pub global activate coverage
        dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --report-on=lib

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

    - name: Check test coverage threshold
      run: |
        dart pub global activate coverage
        dart pub global run coverage:test_with_coverage --min-coverage=80

  integration_test:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Enable desktop support
      run: flutter config --enable-linux-desktop

    - name: Run integration tests
      run: flutter test integration_test/
      env:
        FLUTTER_TEST_DEVICE_ID: linux

  build_examples:
    name: Build Examples
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build example app
      run: |
        cd example
        flutter pub get
        flutter build apk --debug

  validate_themes:
    name: Validate Themes
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Test theme switching
      run: flutter test test/unit/theme_test.dart

    - name: Test internationalization
      run: flutter test test/unit/internationalization_test.dart

  performance_test:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Run performance tests
      run: flutter test test/unit/ --reporter json > test_results.json

    - name: Analyze performance metrics
      run: |
        # Custom script to analyze test performance
        dart run test/performance_analyzer.dart test_results.json

  accessibility_test:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Run accessibility tests
      run: |
        flutter test test/widget/ --coverage
        # Check for accessibility violations in widget tests

  publish_check:
    name: Publish Dry Run
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Check publish warnings
      run: flutter pub publish --dry-run

    - name: Validate package structure
      run: |
        # Check that all required files exist
        test -f README.md
        test -f CHANGELOG.md
        test -f LICENSE
        test -f pubspec.yaml
        test -d lib/
        test -d test/
        test -d example/

  security_scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Security audit
      run: |
        # Check for security vulnerabilities in dependencies
        flutter pub deps --json | dart run security_scanner.dart

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Generate documentation
      run: dart doc

    - name: Check documentation coverage
      run: |
        # Custom script to check documentation coverage
        dart run doc_coverage_checker.dart

  compatibility_test:
    name: Compatibility Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        flutter-version: [3.16.x, 3.19.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ matrix.flutter-version }}
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Run cross-platform tests
      run: flutter test test/unit/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, integration_test, build_examples, validate_themes, performance_test, accessibility_test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Verify all tests pass
      run: |
        flutter test --coverage
        flutter test integration_test/

    - name: Setup Pub Credentials
      run: |
        mkdir -p ~/.pub-cache
        cat <<EOF > ~/.pub-cache/credentials.json
        {
          "accessToken":"${{ secrets.PUB_ACCESS_TOKEN }}",
          "refreshToken":"${{ secrets.PUB_REFRESH_TOKEN }}",
          "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
          "scopes":["openid","https://www.googleapis.com/auth/userinfo.email"],
          "expiration":1234567890000
        }
        EOF

    - name: Publish to pub.dev
      run: flutter pub publish --force

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## Changes in this Release
          - Comprehensive testing infrastructure
          - Advanced theming system with Material 3, Neumorphism, and Glassmorphism
          - Complete internationalization support with 35+ languages
          - Flexible widget configuration system
          - Performance optimizations and accessibility improvements
        draft: false
        prerelease: false
